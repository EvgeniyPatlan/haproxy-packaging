Source: percona-haproxy
Section: net
Priority: optional
Maintainer: Percona Development Team <info@percona.com>
Build-Depends: debhelper (>= 9.0.0),
               libpcre2-dev,
               libssl-dev,
               liblua5.3-dev,
               libsystemd-dev [linux-any],
               python3-sphinx,
               zlib1g-dev
Build-Depends-Indep: python3, python3-mako

Package: percona-haproxy
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, adduser, lsb-base (>= 3.0-6)
Pre-Depends: dpkg (>= 1.17.14)
Provides: haproxy
Suggests: percona-vim-haproxy, percona-haproxy-doc
Description: fast and reliable load balancing reverse proxy
 HAProxy is a TCP/HTTP reverse proxy which is particularly suited for high
 availability environments. It features connection persistence through HTTP
 cookies, load balancing, header addition, modification, deletion both ways. It
 has request blocking capabilities and provides interface to display server
 status.

Package: percona-haproxy-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}, libjs-bootstrap (<< 4), libjs-jquery,
 ${sphinxdoc:Depends}
Pre-Depends: dpkg (>= 1.17.14)
Provides: haproxy-doc
Description: fast and reliable load balancing reverse proxy (HTML documentation)
 HAProxy is a TCP/HTTP reverse proxy which is particularly suited for high
 availability environments. It features connection persistence through HTTP
 cookies, load balancing, header addition, modification, deletion both ways. It
 has request blocking capabilities and provides interface to display server
 status.
 .
 This package contains the HTML documentation for haproxy.

Package: percona-vim-haproxy
Architecture: all
Depends: ${misc:Depends}
Recommends: vim-addon-manager
Provides: vim-haproxy
Description: syntax highlighting for HAProxy configuration files
 The vim-haproxy package provides filetype detection and syntax highlighting
 for HAProxy configuration files.
 .
 As per the Debian vim policy, installed addons are not activated
 automatically, but the "vim-addon-manager" tool can be used for this purpose.
